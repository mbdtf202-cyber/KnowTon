# Nginx cache paths
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=500m inactive=30d use_temp_path=off;

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=static_limit:10m rate=100r/s;

# Upstream backend
upstream backend {
    server backend-service:3000;
    keepalive 32;
}

server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript application/wasm;
    gzip_proxied any;
    gzip_disable "msie6";

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Cache control headers
    add_header X-Cache-Status $upstream_cache_status always;

    # Immutable static assets (versioned files)
    location ~* \.(js|css|woff|woff2|ttf|eot)$ {
        limit_req zone=static_limit burst=50 nodelay;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        access_log off;
        
        # Enable CORS for fonts
        if ($request_filename ~* \.(woff|woff2|ttf|eot)$) {
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # Images with longer cache
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
        limit_req zone=static_limit burst=50 nodelay;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Try WebP/AVIF variants first
        location ~* \.(png|jpg|jpeg)$ {
            add_header Vary "Accept";
            try_files $uri$webp_suffix $uri =404;
        }
    }

    # Media files
    location ~* \.(mp4|webm|mp3|ogg|wav)$ {
        limit_req zone=static_limit burst=20 nodelay;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
        
        # Enable range requests for video
        add_header Accept-Ranges bytes;
    }

    # HTML files - no cache
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # Service Worker - no cache
    location = /sw.js {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # Manifest and icons - short cache
    location ~* \.(manifest|webmanifest)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API proxy with caching
    location /api {
        limit_req zone=api_limit burst=20 nodelay;
        
        # Proxy settings
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache configuration
        proxy_cache api_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $http_cache_control;
        proxy_no_cache $http_pragma $http_authorization;
        
        # Cache headers
        add_header X-Cache-Status $upstream_cache_status;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # IPFS content proxy with aggressive caching
    location /ipfs/ {
        limit_req zone=static_limit burst=30 nodelay;
        
        proxy_pass https://ipfs.io;
        proxy_http_version 1.1;
        proxy_set_header Host ipfs.io;
        
        # Aggressive caching for IPFS (immutable content)
        proxy_cache static_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 30d;
        proxy_cache_valid 404 1h;
        proxy_ignore_headers Cache-Control Expires;
        
        add_header Cache-Control "public, max-age=2592000, immutable";
        add_header X-Cache-Status $upstream_cache_status;
    }

    # SPA routing - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
