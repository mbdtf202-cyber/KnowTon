apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
  labels:
    app: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      containers:
      - name: vault
        image: vault:1.15.2
        ports:
        - containerPort: 8200
        env:
        - name: VAULT_DEV_ROOT_TOKEN_ID
          value: "knowton-dev-token"
        - name: VAULT_DEV_LISTEN_ADDRESS
          value: "0.0.0.0:8200"
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        command:
        - vault
        - server
        - -dev
        - -dev-root-token-id=$(VAULT_DEV_ROOT_TOKEN_ID)
        - -dev-listen-address=$(VAULT_DEV_LISTEN_ADDRESS)
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
        - name: vault-config
          mountPath: /vault/config
      volumes:
      - name: vault-data
        emptyDir: {}
      - name: vault-config
        configMap:
          name: vault-config
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  labels:
    app: vault
spec:
  selector:
    app: vault
  ports:
  - port: 8200
    targetPort: 8200
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
data:
  vault.hcl: |
    ui = true
    
    storage "file" {
      path = "/vault/data"
    }
    
    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_disable = 1
    }
    
    api_addr = "http://0.0.0.0:8200"
    cluster_addr = "http://0.0.0.0:8201"
    
    # Enable secrets engines
    path "secret/*" {
      capabilities = ["create", "read", "update", "delete", "list"]
    }
    
    path "knowton/*" {
      capabilities = ["create", "read", "update", "delete", "list"]
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-secrets
type: Opaque
data:
  root-token: a25vd3Rvbi1kZXYtdG9rZW4=  # knowton-dev-token (base64)
  unseal-key: ""
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
spec:
  template:
    spec:
      containers:
      - name: vault-init
        image: vault:1.15.2
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        - name: VAULT_TOKEN
          value: "knowton-dev-token"
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status; do
            echo "Waiting for Vault to be ready..."
            sleep 5
          done
          
          # Enable KV secrets engine for KnowTon
          vault secrets enable -path=knowton kv-v2
          
          # Create policies
          vault policy write knowton-backend - <<EOF
          path "knowton/data/backend/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
          path "knowton/data/blockchain/*" {
            capabilities = ["read"]
          }
          EOF
          
          vault policy write knowton-oracle - <<EOF
          path "knowton/data/oracle/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
          path "knowton/data/ai/*" {
            capabilities = ["read"]
          }
          EOF
          
          vault policy write knowton-bonding - <<EOF
          path "knowton/data/bonding/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }
          path "knowton/data/blockchain/*" {
            capabilities = ["read"]
          }
          EOF
          
          # Store initial secrets
          vault kv put knowton/backend/database \
            url="postgresql://knowton:password@postgres:5432/knowton" \
            password="secure_password_123"
          
          vault kv put knowton/backend/redis \
            url="redis://redis:6379" \
            password=""
          
          vault kv put knowton/backend/jwt \
            secret="super_secure_jwt_secret_key_for_knowton_platform"
          
          vault kv put knowton/blockchain/arbitrum \
            rpc_url="https://arb1.arbitrum.io/rpc" \
            private_key="0x0000000000000000000000000000000000000000000000000000000000000000"
          
          vault kv put knowton/oracle/pinata \
            api_key="your_pinata_api_key" \
            secret_key="your_pinata_secret_key"
          
          vault kv put knowton/oracle/chainlink \
            oracle_address="0x0000000000000000000000000000000000000000"
          
          vault kv put knowton/ai/models \
            huggingface_token="your_huggingface_token" \
            openai_api_key="your_openai_api_key"
          
          echo "Vault initialization completed successfully"
      restartPolicy: OnFailure