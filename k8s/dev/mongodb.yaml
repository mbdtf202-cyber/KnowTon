apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: knowton-dev
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        - name: MONGO_INITDB_DATABASE
          value: "knowton"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-init
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mongodb-init
        configMap:
          name: mongodb-init-script
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: knowton-dev
spec:
  selector:
    app: mongodb
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
  clusterIP: None
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: knowton-dev
type: Opaque
stringData:
  password: "changeme"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
  namespace: knowton-dev
data:
  init.js: |
    db = db.getSiblingDB('knowton');
    db.createCollection('content_metadata');
    db.content_metadata.createIndex({ contentHash: 1 }, { unique: true });
    db.content_metadata.createIndex({ creatorAddress: 1 });
    db.content_metadata.createIndex({ category: 1 });
